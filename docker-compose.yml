version: '3.8'

services:
  # --- Aplicação NestJS ---
  api:
    build:
      context: .
      dockerfile: core/Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
    depends_on:
      - redis
    networks:
      - monitoring

  # --- Banco de Dados Redis (Para filas Bull) ---
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - monitoring

  # --- Monitoramento ---
  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./core/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./core/monitoring/prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle' # Permite recarregar configurações via API
    depends_on:
      - api
    networks:
      - monitoring

  # --- Alertmanager (Opcional) ---
  alertmanager:
    image: prom/alertmanager
    ports:
      - '9093:9093'
    volumes:
      - ./core/monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - monitoring

  # --- Visualização (Grafana) ---
  grafana:
    image: grafana/grafana
    ports:
      - '3001:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring

  # --- Redis Exporter (Métricas do Redis) ---
  redis_exporter:
    image: oliver006/redis_exporter
    ports:
      - '9121:9121'
    command:
      - '--redis.addr=redis://redis:6379'
    depends_on:
      - redis
    networks:
      - monitoring

# --- Volumes para persistência ---
volumes:
  redis_data:
  grafana_data:

# --- Rede compartilhada ---
networks:
  monitoring:
    driver: bridge
